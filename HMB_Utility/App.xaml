<Application x:Class="HMB_Utility.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:HMB_Utility"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
<!--Converters-->
        <local:DeviceInfoConverter x:Key="DeviceInfoConverter" />
        <local:IsConnectedToFontSizeConverter x:Key="IsConnectedToFontSizeConverter" />
        <local:isConnectedToFontWeightConverter x:Key="isConnectedToFontWeightConverter" />
        <local:CenterCoordConverter x:Key="CenterCoordConverter"/>
        <local:StateToStringConverter x:Key="StateToStringConverter"/>

        <!--Data Grid Header style-->
        <Style x:Key="DGridCentAl" TargetType="DataGridColumnHeader">
            <Setter Property="Thumb.HorizontalContentAlignment" Value="Center" />
            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        </Style>

        <!--All simple button style-->
        <Style TargetType="Button" x:Key="Buttons">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="MediumAquamarine" />
            <Setter Property="Foreground" Value="MediumBlue" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ButtonWithImageBackgroundContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="DeepPink"/>
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Storyboard x:Key="collapseStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
        To="0.5" Duration="0:0:0.1" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
        To="0.5" Duration="0:0:0.1" />
        </Storyboard>

        <Storyboard x:Key="expandStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
        To="1" Duration="0:0:0.1" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
        To="1" Duration="0:0:0.1" />
        </Storyboard>



        <!--Button with image style-->
        <Style TargetType="Button" x:Key="ButtonWithImageBackground">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"  CenterY="{Binding RelativeSource = {RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Height, Converter={StaticResource CenterCoordConverter}}"
                                            CenterX="{Binding RelativeSource = {RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Width, Converter={StaticResource CenterCoordConverter}}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ButtonWithImageBackgroundContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <BeginStoryboard Storyboard="{StaticResource collapseStoryboard}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="PreviewMouseUp">
                    <BeginStoryboard Storyboard="{StaticResource expandStoryboard}"/>
                </EventTrigger>
            </Style.Triggers>

        </Style>
        <!--Validation error style-->
        <ControlTemplate x:Key="validationFailed">
            <StackPanel Orientation="Horizontal">
                <Border BorderBrush="Red" BorderThickness="2" Height="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                        VerticalAlignment="{Binding RelativeSource={RelativeSource Self}, Path=VerticalAlignment}">
                    <AdornedElementPlaceholder />
                </Border>
                <TextBlock Foreground="Red" FontSize="26" FontWeight="Bold">!</TextBlock>
            </StackPanel>
        </ControlTemplate>
        <!--Tool tip with validation error-->
        <Style x:Key="TextBoxWithValidation" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

<!--DataGridCellStyle-->
        <Style TargetType="DataGridCell" x:Key="DGCellStyle">
            
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="SeaGreen"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>

    </Application.Resources>
</Application>
