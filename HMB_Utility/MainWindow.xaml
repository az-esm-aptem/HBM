<Window x:Class="HMB_Utility.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:HMB_Utility"
        mc:Ignorable="d"
        Title="HBM" Height="620" Width="950"
        Background="LightGray" ResizeMode="CanMinimize">
    <!--Converters and styles-->
    <Window.Resources>
        <ContextMenu x:Key="TrayMenu">
            <MenuItem Header="Hide" Click="ShowHideMainWindow" />
            <Separator />
            <MenuItem Header="Exit" Click="MenuExitClick" />
        </ContextMenu>

        <local:DeviceInfoConverter x:Key="DeviceInfoConverter" />
        <local:IsConnectedToFontSizeConverter x:Key="IsConnectedToFontSizeConverter" />
        <local:isConnectedToFontWeightConverter x:Key="isConnectedToFontWeightConverter" />
        <Style x:Key="DGridCentAl" TargetType="DataGridColumnHeader">
            <Setter Property="Thumb.HorizontalContentAlignment" Value="Center" />
            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        </Style>

        <!--All simple button style-->
        <Style TargetType="Button" x:Key="Buttons">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="MediumAquamarine" />
            <Setter Property="Foreground" Value="MediumBlue" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ButtonWithImageBackgroundContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="DeepPink"/>
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Storyboard x:Key="collapseStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
        To="0.5" Duration="0:0:0.1" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
        To="0.5" Duration="0:0:0.1" />
        </Storyboard>

        <Storyboard x:Key="expandStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
        To="1" Duration="0:0:0.1" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
        To="1" Duration="0:0:0.1" />
        </Storyboard>

        <!--Button with image style-->
        <Style TargetType="Button" x:Key="ButtonWithImageBackground">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ButtonWithImageBackgroundContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.3"/>
                </Trigger>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <BeginStoryboard Storyboard="{StaticResource collapseStoryboard}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="PreviewMouseUp">
                    <BeginStoryboard Storyboard="{StaticResource expandStoryboard}"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>
<!--Validation error style-->
        <ControlTemplate x:Key="validationFailed">
            <StackPanel Orientation="Horizontal">
                <Border BorderBrush="Red" BorderThickness="2">
                    <AdornedElementPlaceholder />
                </Border>
                <TextBlock Foreground="Red" FontSize="26" FontWeight="Bold">!</TextBlock>
            </StackPanel>
        </ControlTemplate>
<!--Tool tip with validation error-->
        <Style x:Key="TextBoxWithValidation" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>



    <Grid x:Name="baseGrid" ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="450"/>
            <RowDefinition Height="150"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220" />
            <ColumnDefinition Width="722"/>
        </Grid.ColumnDefinitions>
        <Canvas Margin="10" Grid.Row="0" Grid.Column="0">
            <Button x:Name="SearchDeviceButton" Command="{Binding SearchCommand}" Width="55" Grid.Row="0" Height="55" Canvas.Left="68" Canvas.Top="10"
                    Style="{StaticResource ButtonWithImageBackground}" ToolTipService.ShowOnDisabled="True">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="27" CenterY="27" ScaleX="1" ScaleY="1" />
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="Icons/SearchImage.png" Stretch="Uniform"/>
                </Button.Background>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="Search devices"/>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <Button x:Name="ConnectButton" Command="{Binding ConnectCommand}" Width="55" Height="55" Canvas.Top="10"
                    Style="{StaticResource ButtonWithImageBackground}" ToolTipService.ShowOnDisabled="True">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="27" CenterY="27" ScaleX="1" ScaleY="1" />
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="Icons/ConnectImage.png" Stretch="Uniform"/>
                </Button.Background>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="Connect to selected device"/>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <Button x:Name="DisconnectButton" Command="{Binding DisconnectCommand}" Width="55" Height="55" Canvas.Left="135" Canvas.Top="10"
                    Style="{StaticResource ButtonWithImageBackground}" ToolTipService.ShowOnDisabled="True">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="27" CenterY="27" ScaleX="1" ScaleY="1" />
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="Icons/DisconnectImage.png" Stretch="Uniform"/>
                </Button.Background>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="Disconnect from selected device"/>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <!--Device List-->
            <DataGrid x:Name="DeviceList" Grid.Column="0" IsReadOnly="True" ColumnHeaderStyle="{StaticResource DGridCentAl}" HorizontalAlignment="Left" Height="357" VerticalAlignment="Top" Width="200" AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray"
    RowBackground="LightGray" AlternatingRowBackground="White" ItemsSource="{Binding AllDevices}" SelectionMode="Single" SelectedItem="{Binding SelectedDevice}" Canvas.Top="73" GridLinesVisibility="All"  Background="LightGray">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Command="{Binding DeleteFromDeviceListCommand}">
                            <MenuItem.Icon>
                                <Image Source="Icons/DeleteImage.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell" >
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="SeaGreen"/>
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="*" Width="30">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <RadioButton VerticalAlignment="Center" HorizontalAlignment="Center"
                                             IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}, Path=IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Device" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontSize="{Binding Path=IsConnected, Converter={StaticResource IsConnectedToFontSizeConverter}}" 
                                           FontWeight="{Binding Path=IsConnected, Converter={StaticResource isConnectedToFontWeightConverter}}">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource DeviceInfoConverter}" ConverterParameter="">
                                            <Binding Path="Name" />
                                            <Binding Path="IpAddress" />
                                            <Binding Path="Model" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Canvas>

        <Canvas Grid.Column="1" Grid.Row="0" Margin="10">
            <Button x:Name="RefreshSingleValButton"  Command="{Binding RefreshCommand}"  Width="56" Canvas.Left="636" Canvas.Top="10" Height="55"
                     Style="{StaticResource ButtonWithImageBackground}" ToolTipService.ShowOnDisabled="True">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="27" CenterY="27" ScaleX="1" ScaleY="1" />
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="Icons/RefreshImage.png" Stretch="Uniform"/>
                </Button.Background>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="Refresh values"/>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <!--<Button x:Name="CreateDBButton" Command="{Binding CreateDBCommand}" Content="Add to DB" Grid.Column="1" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="75" Height="20"/>-->
            <Button x:Name="StartDaqButton" Command="{Binding StartDaqCommand}" Width="55" Height="55" Canvas.Left="189"
                    Style="{StaticResource ButtonWithImageBackground}" ToolTipService.ShowOnDisabled="True" Canvas.Top="10">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="27" CenterY="27" ScaleX="1" ScaleY="1" />
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="Icons/StartDaqImage.png" Stretch="Uniform"/>
                </Button.Background>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="Start DAQ"/>
                            <TextBlock Text="Use the signal filter first"/>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <Button x:Name="StopDaqButton" Command="{Binding StopDaqCommand}" Width="55" Height="55" Canvas.Left="258" Canvas.Top="10"
                    Style="{StaticResource ButtonWithImageBackground}" ToolTipService.ShowOnDisabled="True">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="27" CenterY="27" ScaleX="1" ScaleY="1" />
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="Icons/StopDaqImage.png" Stretch="Uniform"/>
                </Button.Background>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="Stop DAQ"/>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <!--Signal types filter-->
            <ComboBox ItemsSource="{Binding SigFilter.SignalTypes}" SelectedItem="{Binding SigFilter.SelectedType, Mode=TwoWay}"  
                      Grid.Column="1" Width="161" Canvas.Left="10" Canvas.Top="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center">
                <ComboBox.ToolTip>
                    <StackPanel>
                        <TextBlock Text="Choose signal type"/>
                    </StackPanel>
                </ComboBox.ToolTip>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction
                            Command="{Binding UseFilterCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Name}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <!--Signal List-->
            <DataGrid x:Name="SignalList" Grid.Column="1" IsReadOnly="True" ColumnHeaderStyle="{StaticResource DGridCentAl}" HorizontalAlignment="Left" Height="357" VerticalAlignment="Top" Width="692" AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray"
    RowBackground="LightGray" AlternatingRowBackground="White" DataContext="{Binding SelectedDevice, Mode=OneWay}" ItemsSource="{Binding Path=Signals}" SelectionMode="Extended" SelectionChanged="SignalList_SelectionChanged"
                      Canvas.Top="73"  GridLinesVisibility="All" Background="LightGray">
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell" >
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="SeaGreen"/>
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Select">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}, Path=IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Connector" Binding="{Binding Path=HbmConnector.LocationHint}" Width="120" />
                    <DataGridTextColumn Header="Channel" Binding="{Binding Path=HbmChannel.Name}" Width="120" />
                    <DataGridTextColumn Header="Signal" Binding="{Binding Path=Name}" Width="120" />
                    <DataGridTextColumn Header="Value" Binding="{Binding Path=SingleValue}" Width="120" />
                    <DataGridTextColumn Header="Time Stamp" Binding="{Binding Path=SingleTimeStamp}" Width="120" />
                    <DataGridTextColumn Header="State" Binding="{Binding Path=SingleState}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
        </Canvas>

        <!--Protocol messages-->
        <ListView x:Name="Protocol" ItemsSource="{Binding Path=MessagesToProtocol}" SelectionMode="Single" Margin="10,10,20,39" Grid.Row="1" Grid.Column="1"
                  VirtualizingPanel.ScrollUnit="Item" Background="LightGray" BorderThickness="2" BorderBrush="DarkGray">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding}" FontSize="10" FontWeight="Normal" FontStyle="Normal"/>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!--Adding devices using IP-->
        <Canvas  Grid.Column="0" Grid.Row="1" Margin="10,0,10,21" >
            <Button Command="{Binding AddDeviceByIpCommand}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="50" Height="50" Canvas.Left="74" Canvas.Top="74"
                    Style="{StaticResource ButtonWithImageBackground}" ToolTipService.ShowOnDisabled="True">
                <Button.RenderTransform>
                    <ScaleTransform CenterX="25" CenterY="25" ScaleX="1" ScaleY="1" />
                </Button.RenderTransform>
                <Button.Background>
                    <ImageBrush ImageSource="Icons/AddImage.png" Stretch="Uniform"/>
                </Button.Background>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="Add device"/>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="Connect using IP" TextAlignment="Center" VerticalAlignment="Center"  FontSize="12" FontWeight="Bold" Width="200"/>
            <ComboBox ItemsSource="{Binding AvailableFamily.Families}" SelectedItem="{Binding AvailableFamily.SelectedFamily, Mode=TwoWay}"
                      HorizontalAlignment="Center" VerticalAlignment="Center" Width="180" Canvas.Left="10" Canvas.Top="21" HorizontalContentAlignment="Center">
                <ComboBox.ToolTip>
                    <StackPanel>
                        <TextBlock Text="Choose family"/>
                    </StackPanel>
                </ComboBox.ToolTip>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBox Height="23" Canvas.Left="10" TextWrapping="NoWrap" Canvas.Top="48" Width="180" MaxLength="15" TextAlignment="Center" FontSize="12" Background="AntiqueWhite"
                     Validation.ErrorTemplate="{StaticResource validationFailed}" Style="{StaticResource TextBoxWithValidation}">
                <TextBox.ToolTip>
                    <StackPanel>
                        <TextBlock Text="Enter valid IP address"/>
                    </StackPanel>
                </TextBox.ToolTip>
                <TextBox.Text>
                    <Binding Path="IpToConnect.IP" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Canvas>
    </Grid>
</Window>
